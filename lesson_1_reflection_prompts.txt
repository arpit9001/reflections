How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    We can find the changes that were made after the bug was introduced, so by looking into the changes
    we can predict what caused the bug.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    We can undo any changes that we dont require and start our work from the earlier version i.e restore earlier files 
    and compare the changes with previous versions.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    pros : you can commit logical change ,commit will be without any bug and will be compile error free.
    cons : you can miss certain changes that were not comitted but were changed in the file and are important.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Because we have to commit logical change sand files are interdependent on each others.

How can you use the commands git log and git diff to view the history of files?

    With git log we can see all the commits that were made in the repo with SHA,author,date and description while
    git diff helps us to show the difference between two version of files , files that are changed with lines added and deleted. 

How might using version control make you more confident to make changes that
could break something?

    As we can track the history of commits so we can revert back to the older commit which was working.

Now that you have your workspace set up, what do you want to try using Git for?

    Check Version History ,Commit Files,Manage Branches
